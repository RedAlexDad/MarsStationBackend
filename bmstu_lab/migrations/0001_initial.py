# Generated by Django 4.1 on 2023-12-24 10:18

from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Employee",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("full_name", models.CharField(max_length=255, verbose_name="ФИО")),
                ("post", models.CharField(max_length=255, verbose_name="Должность")),
                (
                    "name_organization",
                    models.CharField(
                        max_length=255, verbose_name="Название организации"
                    ),
                ),
                (
                    "address",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="Адрес"
                    ),
                ),
            ],
            options={
                "verbose_name": "Сотрудник",
                "db_table": "employee",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="GeographicalObject",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("feature", models.CharField(max_length=255, verbose_name="Название")),
                ("type", models.CharField(max_length=255, verbose_name="Тип")),
                (
                    "size",
                    models.IntegerField(blank=True, null=True, verbose_name="Площадь"),
                ),
                (
                    "describe",
                    models.CharField(
                        blank=True, max_length=1000, null=True, verbose_name="Описание"
                    ),
                ),
                (
                    "photo",
                    models.BinaryField(
                        blank=True, null=True, verbose_name="Изображение"
                    ),
                ),
                (
                    "status",
                    models.BooleanField(
                        verbose_name="Статус объекта: доступен / недоступен"
                    ),
                ),
            ],
            options={
                "verbose_name": "Географический объект",
                "db_table": "geographical_object",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Location",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                (
                    "sequence_number",
                    models.IntegerField(verbose_name="Порядковый номер"),
                ),
            ],
            options={
                "verbose_name": "Местоположение",
                "db_table": "location",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="MarsStation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                (
                    "type_status",
                    models.CharField(max_length=255, verbose_name="Тип заявки"),
                ),
                ("date_create", models.DateField(verbose_name="Дата создания")),
                (
                    "date_form",
                    models.DateField(
                        blank=True, null=True, verbose_name="Дата формирования"
                    ),
                ),
                (
                    "date_close",
                    models.DateField(
                        blank=True, null=True, verbose_name="Дата закрытия"
                    ),
                ),
                (
                    "status_task",
                    models.IntegerField(
                        choices=[
                            (1, "Черновик"),
                            (2, "В работе"),
                            (3, "Завершена"),
                            (4, "Отменена"),
                            (5, "Удалена"),
                        ],
                        default=1,
                        verbose_name="Статус заявки",
                    ),
                ),
                (
                    "status_mission",
                    models.IntegerField(
                        choices=[
                            (0, "Не удалось обратиться к асинхронному сервису"),
                            (1, "В работе"),
                            (2, "Успех"),
                            (3, "Потеря"),
                        ],
                        default=2,
                        verbose_name="Статус миссии",
                    ),
                ),
            ],
            options={
                "verbose_name": "Марсианская станция",
                "db_table": "mars_station",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Transport",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="Название"
                    ),
                ),
                ("type", models.CharField(max_length=255, verbose_name="Тип")),
                (
                    "describe",
                    models.CharField(
                        blank=True, max_length=1000, null=True, verbose_name="Описание"
                    ),
                ),
                (
                    "photo",
                    models.BinaryField(
                        blank=True,
                        max_length=1000,
                        null=True,
                        verbose_name="Изображение",
                    ),
                ),
            ],
            options={
                "verbose_name": "Транспорт",
                "db_table": "transport",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Users",
            fields=[
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "id",
                    models.BigAutoField(
                        primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        max_length=255, unique=True, verbose_name="Никнейм"
                    ),
                ),
                ("password", models.CharField(max_length=255, verbose_name="Пароль")),
                (
                    "is_moderator",
                    models.BooleanField(
                        default=False,
                        verbose_name="Является ли пользователь модератором?",
                    ),
                ),
                ("is_staff", models.BooleanField(default=False)),
                ("is_active", models.BooleanField(default=True)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "Пользователь",
                "db_table": "users",
            },
        ),
    ]
